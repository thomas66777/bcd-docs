{
    "swagger": "2.0",
    "info": {
        "description": "This is API description for Better Call Dev service.",
        "title": "Better Call Dev API",
        "contact": {
            "name": "Baking Bad Team",
            "url": "https://baking-bad.org/docs",
            "email": "hello@baking-bad.org"
        },
        "version": "",
        "x-logo": {
            "altText": "Better Call Dev logo",
            "href": "https://better-call.dev",
            "url": "https://better-call.dev/img/logo_og.png"
        }
    },
    "schemes": [
        "https"
    ],
    "host": "better-call.dev",
    "basePath": "",
    "paths": {
        "/v1/account/{network}": {
            "get": {
                "description": "Batch account token balances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Batch account token balances",
                "operationId": "get-batch-token-balances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of addresses (e.g. addr1,addr2,addr3)",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/handlers.TokenBalance"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/account/{network}/{address}": {
            "get": {
                "description": "Get account info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get account info",
                "operationId": "get-account-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/account/{network}/{address}/count": {
            "get": {
                "description": "Get account token balances count grouped by count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get account token balances count grouped by count",
                "operationId": "get-account-token-balances-count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/account/{network}/{address}/metadata": {
            "get": {
                "description": "Returns full metadata for account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get metadata for account",
                "operationId": "get-account-tzip",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT or tz address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TZIPResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/account/{network}/{address}/token_balances": {
            "get": {
                "description": "Get account token balances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get account token balances",
                "operationId": "get-account-token-balances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Contract address",
                        "name": "contract",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenBalances"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/bigmap/{network}/{ptr}": {
            "get": {
                "description": "Get big map info by pointer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map info by pointer",
                "operationId": "get-bigmap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetBigMapResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/bigmap/{network}/{ptr}/count": {
            "get": {
                "description": "Get big map diffs count info by pointer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map diffs count info by pointer",
                "operationId": "get-bigmapdiff-count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/bigmap/{network}/{ptr}/history": {
            "get": {
                "description": "Get big map actions (alloc/copy/remove)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map actions (alloc/copy/remove)",
                "operationId": "get-bigmap-history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BigMapHistoryResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/bigmap/{network}/{ptr}/keys": {
            "get": {
                "description": "Get big map keys by pointer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map keys by pointer",
                "operationId": "get-bigmap-keys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Max level filter",
                        "name": "max_level",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Min level filter",
                        "name": "min_level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.BigMapResponseItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/bigmap/{network}/{ptr}/keys/{key_hash}": {
            "get": {
                "description": "Get big map diffs by pointer and key hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bigmap"
                ],
                "summary": "Get big map diffs by pointer and key hash",
                "operationId": "get-bigmap-keyhash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Big map pointer",
                        "name": "ptr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 54,
                        "minLength": 54,
                        "type": "string",
                        "description": "Key hash in big map",
                        "name": "key_hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BigMapDiffByKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}": {
            "get": {
                "description": "Get full contract info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract info",
                "operationId": "get-contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/code": {
            "get": {
                "description": "Get contract code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract code",
                "operationId": "get-contract-code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Protocol",
                        "name": "protocol",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Level",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/entrypoints": {
            "get": {
                "description": "Get contract entrypoints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract entrypoints",
                "operationId": "get-contract-entrypoints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.EntrypointSchema"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/entrypoints/data": {
            "post": {
                "description": "Get entrypoint data from schema object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get entrypoint data from schema object",
                "operationId": "get-contract-entrypoints-data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.getEntrypointDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/entrypoints/schema": {
            "get": {
                "description": "Get contract`s entrypoint schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract`s entrypoint schema",
                "operationId": "get-contract-entrypoints-schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Entrypoint name",
                        "name": "entrypoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "empty",
                            "latest"
                        ],
                        "type": "string",
                        "description": "Fill storage type",
                        "name": "fill_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.EntrypointSchema"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/entrypoints/trace": {
            "post": {
                "description": "Execute entrypoint with passed arguments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Execute entrypoint with passed arguments",
                "operationId": "run-code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.runCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Operation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/mempool": {
            "get": {
                "description": "Get contract mempool operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract mempool operations",
                "operationId": "get-contract-mempool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Operation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/migrations": {
            "get": {
                "description": "Get contract migrations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract migrations",
                "operationId": "get-contract-migrations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Migration"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/operations": {
            "get": {
                "description": "Get contract operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract operations",
                "operationId": "get-contract-operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last operation ID",
                        "name": "last_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Expected OPG count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated operations statuses",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated called entrypoints list",
                        "name": "entrypoints",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include storage diff to operations or not",
                        "name": "with_storage_diff",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.OperationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/same": {
            "get": {
                "description": "Get same contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get same contracts",
                "operationId": "get-contract-same",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Manager",
                        "name": "manager",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SameContractsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/similar": {
            "get": {
                "description": "Get similar contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get similar contracts",
                "operationId": "get-contract-similar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SimilarContractsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/storage": {
            "get": {
                "description": "Get contract storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract storage",
                "operationId": "get-contract-storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Level",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ast.MiguelNode"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/storage/raw": {
            "get": {
                "description": "Get contract raw storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract raw storage",
                "operationId": "get-contract-storage-raw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Level",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/storage/rich": {
            "get": {
                "description": "Get contract rich storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract rich storage",
                "operationId": "get-contract-storage-rich",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Level",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/storage/schema": {
            "get": {
                "description": "Get contract storage schema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract storage schema",
                "operationId": "get-contract-storage-schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "empty",
                            "current"
                        ],
                        "type": "string",
                        "description": "Fill storage type",
                        "name": "fill_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.EntrypointSchema"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/tokens": {
            "get": {
                "description": "List contract tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "List contract tokens",
                "operationId": "get-contract-token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum token`s creation level (less than or equal)",
                        "name": "max_level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum token`s creation level (greater than)",
                        "name": "min_level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.TokenMetadata"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/tokens/count": {
            "get": {
                "description": "Get contract`s tokens count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract`s tokens count",
                "operationId": "get-contract-token-count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/tokens/holders": {
            "get": {
                "description": "List token holders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "List token holders",
                "operationId": "get-token-holders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gin.H"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/views/execute": {
            "post": {
                "description": "Execute view of contracts metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Execute view of contracts metadata",
                "operationId": "contract-execute-view",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.executeViewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ast.MiguelNode"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/contract/{network}/{address}/views/schema": {
            "get": {
                "description": "Get view schemas of contract metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get view schemas of contract metadata",
                "operationId": "get-contract-tzip-views-schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ViewSchema"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/diff": {
            "post": {
                "description": "Get diff between two contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get diff between two contracts",
                "operationId": "get-diff",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CodeDiffRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CodeDiffResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/domains/{network}": {
            "get": {
                "description": "Show all tezos domains for network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Show all tezos domains for network",
                "operationId": "list-domains",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Transfers count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DomainsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/domains/{network}/resolve": {
            "get": {
                "description": "Resolve domain by address and vice versa",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Resolve domain",
                "operationId": "resolve-domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tezosdomain.TezosDomain"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/head": {
            "get": {
                "description": "Get indexer head for each network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "head"
                ],
                "summary": "Show indexer head",
                "operationId": "get-indexer-head",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.HeadResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/operation/{id}/error_location": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operations"
                ],
                "summary": "Get code line where operation failed",
                "operationId": "get-operation-error-location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Internal BCD operation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetErrorLocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/opg/{hash}": {
            "get": {
                "description": "Get operation group by hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operations"
                ],
                "summary": "Get operation group",
                "operationId": "get-opg",
                "parameters": [
                    {
                        "maxLength": 51,
                        "minLength": 51,
                        "type": "string",
                        "description": "Operation group hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Search operation in mempool or not",
                        "name": "with_mempool",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Operation"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/pick_random": {
            "get": {
                "description": "Get random contract with 2 or more operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Show random contract",
                "operationId": "get-random-contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Contract"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/search": {
            "get": {
                "description": "Search any data in contracts, operations and big map diff with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search in better-call",
                "operationId": "search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query string",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated field names among which will search",
                        "name": "f",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated networks list for searching",
                        "name": "n",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Return search result since given timestamp",
                        "name": "s",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Return search result before given timestamp",
                        "name": "e",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "description": "Grouping by contracts similarity. 0 - false, any others - true",
                        "name": "g",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of indices for searching. Values: contract, operation, bigmapdiff",
                        "name": "i",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of languages for searching. Values: smartpy, liquidity, ligo, lorentz, michelson",
                        "name": "l",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/slug/{slug}": {
            "get": {
                "description": "Get contract by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract by slug",
                "operationId": "get-contract-by-slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Alias"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats": {
            "get": {
                "description": "get indexer states for all networks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Show indexer stats",
                "operationId": "get-stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Block"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/{network}": {
            "get": {
                "description": "Get detailed statistics for network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Network statistics",
                "operationId": "get-network-stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/{network}/contracts": {
            "get": {
                "description": "Show total volume, unique users and transactions count for period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Show contracts stats",
                "operationId": "get-stats-contracts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minLength": 36,
                        "type": "string",
                        "description": "Comma-separated KT addresses",
                        "name": "contracts",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "all",
                            "year",
                            "month",
                            "week",
                            "day"
                        ],
                        "type": "string",
                        "description": "One of periods",
                        "name": "period",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/operation.DAppStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/{network}/series": {
            "get": {
                "description": "Get count series data for network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get network series",
                "operationId": "get-network-series",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "contract",
                            "operation",
                            "paid_storage_size_diff",
                            "consumed_gas",
                            "users",
                            "volume"
                        ],
                        "type": "string",
                        "description": "One of names",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "year",
                            "month",
                            "week",
                            "day"
                        ],
                        "type": "string",
                        "description": "One of periods",
                        "name": "period",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated contract addresses",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/tokens/{network}": {
            "get": {
                "description": "Get all contracts that implement FA1/FA1.2 standard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get all contracts that implement FA1/FA1.2 standard",
                "operationId": "get-fa-all",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PageableTokenContracts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/tokens/{network}/metadata": {
            "get": {
                "description": "List token metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "List token metadata",
                "operationId": "list-token-metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum token`s creation level (less than or equal)",
                        "name": "max_level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum token`s creation level (greater than)",
                        "name": "min_level",
                        "in": "query"
                    },
                    {
                        "maxLength": 25,
                        "type": "string",
                        "description": "Creator name",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "contract",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.Token"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/tokens/{network}/series": {
            "get": {
                "description": "Get volume series for token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get volume series for token",
                "operationId": "get-token-series",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "year",
                            "month",
                            "week",
                            "day"
                        ],
                        "type": "string",
                        "description": "One of periods",
                        "name": "period",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "contract",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/tokens/{network}/transfers/{address}": {
            "get": {
                "description": "Get all token transfers (FA1/FA1.2) where given address is src/dst",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get all token transfers (FA1/FA1.2) where given address is src/dst",
                "operationId": "get-token-transfers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last transfer ID",
                        "name": "last_id",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort: one of `asc` and `desc`",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp in seconds",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of contracts which tokens will be requested",
                        "name": "contracts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/tokens/{network}/version/{faversion}": {
            "get": {
                "description": "Get all contracts that implement FA1/FA1.2 standard by version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get all contracts that implement FA1/FA1.2 standard by version",
                "operationId": "get-fa-version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "fa1",
                            "fa12",
                            "fa2"
                        ],
                        "type": "string",
                        "description": "FA token version",
                        "name": "faversion",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "description": "Requested count",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PageableTokenContracts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        },
        "/v1/{network}/{address}/transfers": {
            "get": {
                "description": "Show contract`s tokens transfers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Show contract`s tokens transfers",
                "operationId": "get-contract-transfers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string",
                        "description": "KT address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "description": "Transfers count",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ast.JSONModel": {
            "type": "object",
            "additionalProperties": true
        },
        "ast.JSONSchema": {
            "type": "object",
            "properties": {
                "const": {
                    "type": "string"
                },
                "default": {
                    "type": "object"
                },
                "format": {
                    "type": "string"
                },
                "items": {
                    "$ref": "#/definitions/ast.SchemaKey"
                },
                "maxLength": {
                    "type": "integer"
                },
                "minLength": {
                    "type": "integer"
                },
                "oneOf": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ast.JSONSchema"
                    }
                },
                "prim": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ast.JSONSchema"
                    }
                },
                "required": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "schemaKey": {
                    "$ref": "#/definitions/ast.SchemaKey"
                },
                "tag": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "x-itemTitle": {
                    "type": "string"
                }
            }
        },
        "ast.MiguelNode": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ast.MiguelNode"
                    }
                },
                "diff_type": {
                    "type": "string"
                },
                "from": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "prim": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "ast.SchemaKey": {
            "type": "object"
        },
        "ast.Typedef": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ast.TypedefArg"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "typedef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ast.Typedef"
                    }
                }
            }
        },
        "ast.TypedefArg": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "formatter.DiffResult": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "integer"
                },
                "changed": {
                    "type": "integer"
                },
                "left": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/formatter.Item"
                        }
                    }
                },
                "removed": {
                    "type": "integer"
                },
                "right": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/formatter.Item"
                        }
                    }
                }
            }
        },
        "formatter.Item": {
            "type": "object",
            "properties": {
                "chunk": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        },
        "handlers.AccountInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "balance": {
                    "type": "integer"
                },
                "last_action": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "tx_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.Alias": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "KT1CeekjGVRc5ASmgWDc658NBExetoKNuiqz"
                },
                "alias": {
                    "type": "string",
                    "example": "Contract alias"
                },
                "network": {
                    "type": "string",
                    "example": "babylonnet"
                },
                "slug": {
                    "type": "string",
                    "example": "contract_slug"
                }
            }
        },
        "handlers.BigMapDiffByKeyResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "object",
                    "x-nullable": true
                },
                "key_hash": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.BigMapDiffItem"
                    },
                    "x-nullable": true
                }
            }
        },
        "handlers.BigMapDiffItem": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "handlers.BigMapHistoryItem": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "destination_ptr": {
                    "type": "integer",
                    "x-nullable": true
                },
                "source_ptr": {
                    "type": "integer",
                    "x-nullable": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.BigMapHistoryResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.BigMapHistoryItem"
                    },
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "ptr": {
                    "type": "integer"
                }
            }
        },
        "handlers.BigMapItem": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "object"
                },
                "key_hash": {
                    "type": "string"
                },
                "key_string": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "handlers.BigMapResponseItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/handlers.BigMapItem"
                }
            }
        },
        "handlers.Block": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "string",
                    "example": "NetXdQprcVkpaWU"
                },
                "hash": {
                    "type": "string",
                    "example": "BLyAEwaXShJuZasvUezHUfLqzZ48V8XrPvXF2wRaH15tmzEpsHT"
                },
                "level": {
                    "type": "integer",
                    "example": 24
                },
                "network": {
                    "type": "string",
                    "example": "mainnet"
                },
                "predecessor": {
                    "type": "string",
                    "example": "BMWVEwEYw9m5iaHzqxDfkPzZTV4rhkSouRh3DkVMVGkxZ3EVaNs"
                },
                "protocol": {
                    "type": "string",
                    "example": "PtCJ7pwoxe8JasnHY8YonnLYjcVHmhiARPJvqcC6VfHT5s8k8sY"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2018-06-30T18:05:27Z"
                }
            }
        },
        "handlers.CodeDiffLeg": {
            "type": "object",
            "required": [
                "address",
                "network"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "handlers.CodeDiffRequest": {
            "type": "object",
            "required": [
                "left",
                "right"
            ],
            "properties": {
                "left": {
                    "$ref": "#/definitions/handlers.CodeDiffLeg"
                },
                "right": {
                    "$ref": "#/definitions/handlers.CodeDiffLeg"
                }
            }
        },
        "handlers.CodeDiffResponse": {
            "type": "object",
            "properties": {
                "diff": {
                    "$ref": "#/definitions/formatter.DiffResult"
                },
                "left": {
                    "$ref": "#/definitions/handlers.CodeDiffLeg"
                },
                "right": {
                    "$ref": "#/definitions/handlers.CodeDiffLeg"
                }
            }
        },
        "handlers.Contract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "annotations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "delegate": {
                    "type": "string",
                    "x-nullable": true
                },
                "delegate_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "entrypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "fail_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "found_by": {
                    "type": "string",
                    "x-nullable": true
                },
                "hardcoded": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_action": {
                    "type": "string",
                    "x-nullable": true
                },
                "level": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string",
                    "x-nullable": true
                },
                "migrations_count": {
                    "type": "integer",
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "same_count": {
                    "type": "integer"
                },
                "similar_count": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string",
                    "x-nullable": true
                },
                "subscription": {
                    "x-nullable": true,
                    "$ref": "#/definitions/handlers.Subscription"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "timestamp": {
                    "type": "string"
                },
                "total_subscribed": {
                    "type": "integer"
                },
                "tx_count": {
                    "type": "integer",
                    "x-nullable": true
                },
                "verification_source": {
                    "type": "string",
                    "x-nullable": true
                },
                "verified": {
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        },
        "handlers.CountResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.DomainsResponse": {
            "type": "object",
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tezosdomain.TezosDomain"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.EntrypointSchema": {
            "type": "object",
            "properties": {
                "default_model": {
                    "x-nullable": true,
                    "$ref": "#/definitions/ast.JSONModel"
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "$ref": "#/definitions/ast.JSONSchema"
                },
                "typedef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ast.Typedef"
                    }
                }
            }
        },
        "handlers.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "text"
                }
            }
        },
        "handlers.GetBigMapResponse": {
            "type": "object",
            "properties": {
                "active_keys": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "contract_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "ptr": {
                    "type": "integer"
                },
                "total_keys": {
                    "type": "integer"
                },
                "typedef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ast.Typedef"
                    },
                    "x-nullable": true
                }
            }
        },
        "handlers.GetErrorLocationResponse": {
            "type": "object",
            "properties": {
                "end_col": {
                    "type": "integer"
                },
                "failed_row": {
                    "type": "integer"
                },
                "first_row": {
                    "type": "integer"
                },
                "start_col": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "handlers.HeadResponse": {
            "type": "object",
            "properties": {
                "contract_calls": {
                    "type": "integer"
                },
                "fa_count": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "total_balance": {
                    "type": "integer"
                },
                "total_withdrawn": {
                    "type": "integer"
                },
                "unique_contracts": {
                    "type": "integer"
                }
            }
        },
        "handlers.Migration": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string",
                    "x-nullable": true
                },
                "kind": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "prev_protocol": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.NetworkStats": {
            "type": "object",
            "properties": {
                "contracts_count": {
                    "type": "integer",
                    "example": 10
                },
                "languages": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "operations_count": {
                    "type": "integer",
                    "example": 100
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Protocol"
                    }
                }
            }
        },
        "handlers.Operation": {
            "type": "object",
            "properties": {
                "allocated_destination_contract_burned": {
                    "type": "integer",
                    "x-nullable": true
                },
                "amount": {
                    "type": "integer",
                    "x-nullable": true
                },
                "balance": {
                    "type": "integer",
                    "x-nullable": true
                },
                "burned": {
                    "type": "integer",
                    "x-nullable": true
                },
                "content_index": {
                    "type": "integer"
                },
                "counter": {
                    "type": "integer",
                    "x-nullable": true
                },
                "delegate": {
                    "type": "string",
                    "x-nullable": true
                },
                "destination": {
                    "type": "string",
                    "x-nullable": true
                },
                "destination_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "entrypoint": {
                    "type": "string",
                    "x-nullable": true
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tezerrors.Error"
                    },
                    "x-nullable": true
                },
                "fee": {
                    "type": "integer",
                    "x-nullable": true
                },
                "gas_limit": {
                    "type": "integer",
                    "x-nullable": true
                },
                "hash": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "internal": {
                    "type": "boolean"
                },
                "kind": {
                    "type": "string"
                },
                "level": {
                    "type": "integer",
                    "x-nullable": true
                },
                "manager_pubkey": {
                    "type": "string",
                    "x-nullable": true
                },
                "mempool": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "x-nullable": true
                },
                "protocol": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string",
                    "x-nullable": true
                },
                "rawMempool": {
                    "type": "object",
                    "x-nullable": true
                },
                "result": {
                    "x-nullable": true,
                    "$ref": "#/definitions/handlers.OperationResult"
                },
                "source": {
                    "type": "string",
                    "x-nullable": true
                },
                "source_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "type": "string"
                },
                "storage_diff": {
                    "type": "object",
                    "x-nullable": true
                },
                "storage_limit": {
                    "type": "integer",
                    "x-nullable": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.OperationResponse": {
            "type": "object",
            "properties": {
                "last_id": {
                    "type": "string",
                    "x-nullable": true,
                    "example": "1588640276994159"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Operation"
                    }
                }
            }
        },
        "handlers.OperationResult": {
            "type": "object",
            "properties": {
                "allocated_destination_contract": {
                    "type": "boolean",
                    "x-nullable": true,
                    "example": true
                },
                "consumed_gas": {
                    "type": "integer",
                    "x-nullable": true,
                    "example": 100
                },
                "paid_storage_size_diff": {
                    "type": "integer",
                    "x-nullable": true,
                    "example": 300
                },
                "storage_size": {
                    "type": "integer",
                    "x-nullable": true,
                    "example": 200
                }
            }
        },
        "handlers.PageableTokenContracts": {
            "type": "object",
            "properties": {
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenContract"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.Protocol": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string",
                    "example": "Carthage"
                },
                "end_level": {
                    "type": "integer",
                    "example": 0
                },
                "hash": {
                    "type": "string",
                    "example": "PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb"
                },
                "network": {
                    "type": "string",
                    "example": "mainnet"
                },
                "start_level": {
                    "type": "integer",
                    "example": 851969
                }
            }
        },
        "handlers.SameContractsResponse": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Contract"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.SimilarContract": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "integer",
                    "x-nullable": true
                },
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "annotations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "count": {
                    "type": "integer"
                },
                "delegate": {
                    "type": "string",
                    "x-nullable": true
                },
                "delegate_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "entrypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "fail_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "found_by": {
                    "type": "string",
                    "x-nullable": true
                },
                "hardcoded": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_action": {
                    "type": "string",
                    "x-nullable": true
                },
                "level": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string",
                    "x-nullable": true
                },
                "migrations_count": {
                    "type": "integer",
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "removed": {
                    "type": "integer",
                    "x-nullable": true
                },
                "same_count": {
                    "type": "integer"
                },
                "similar_count": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string",
                    "x-nullable": true
                },
                "subscription": {
                    "x-nullable": true,
                    "$ref": "#/definitions/handlers.Subscription"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "timestamp": {
                    "type": "string"
                },
                "total_subscribed": {
                    "type": "integer"
                },
                "tx_count": {
                    "type": "integer",
                    "x-nullable": true
                },
                "verification_source": {
                    "type": "string",
                    "x-nullable": true
                },
                "verified": {
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        },
        "handlers.SimilarContractsResponse": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.SimilarContract"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.Subscription": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "sentry_dsn": {
                    "type": "string",
                    "x-nullable": true
                },
                "sentry_enabled": {
                    "type": "boolean"
                },
                "subscribed_at": {
                    "type": "string"
                },
                "watch_calls": {
                    "type": "boolean"
                },
                "watch_deployments": {
                    "type": "boolean"
                },
                "watch_errors": {
                    "type": "boolean"
                },
                "watch_mempool": {
                    "type": "boolean"
                },
                "watch_migrations": {
                    "type": "boolean"
                },
                "watch_same": {
                    "type": "boolean"
                },
                "watch_similar": {
                    "type": "boolean"
                }
            }
        },
        "handlers.TZIPResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "$ref": "#/definitions/tezosdomain.ReverseTezosDomain"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tzip.Event"
                    }
                },
                "extras": {
                    "type": "object",
                    "additionalProperties": true
                },
                "homepage": {
                    "type": "string"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "license": {
                    "$ref": "#/definitions/tzip.License"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tzip.View"
                    }
                }
            }
        },
        "handlers.Token": {
            "type": "object",
            "properties": {
                "artifact_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "contract": {
                    "type": "string"
                },
                "creators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "decimals": {
                    "type": "integer",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                },
                "display_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "external_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "is_boolean_amount": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "is_transferable": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "level": {
                    "type": "integer",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "should_prefer_symbol": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "supply": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string",
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "token_id": {
                    "type": "integer"
                },
                "token_info": {
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "transfered": {
                    "type": "number"
                },
                "volume_24_hours": {
                    "type": "number",
                    "x-nullable": true
                }
            }
        },
        "handlers.TokenBalance": {
            "type": "object",
            "properties": {
                "artifact_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "balance": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "creators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "decimals": {
                    "type": "integer",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                },
                "display_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "external_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "is_boolean_amount": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "is_transferable": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "level": {
                    "type": "integer",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "should_prefer_symbol": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "symbol": {
                    "type": "string",
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "token_id": {
                    "type": "integer"
                },
                "token_info": {
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "volume_24_hours": {
                    "type": "number",
                    "x-nullable": true
                }
            }
        },
        "handlers.TokenBalances": {
            "type": "object",
            "properties": {
                "balances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenBalance"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.TokenContract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "balance": {
                    "type": "integer"
                },
                "delegate": {
                    "type": "string",
                    "x-nullable": true
                },
                "delegate_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_action": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "manager": {
                    "type": "string",
                    "x-nullable": true
                },
                "methods": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/handlers.TokenMethodStats"
                    },
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_count": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.TokenMetadata": {
            "type": "object",
            "properties": {
                "artifact_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "contract": {
                    "type": "string"
                },
                "creators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "decimals": {
                    "type": "integer",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                },
                "display_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "external_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "is_boolean_amount": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "is_transferable": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "level": {
                    "type": "integer",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "network": {
                    "type": "string"
                },
                "should_prefer_symbol": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "symbol": {
                    "type": "string",
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumbnail_uri": {
                    "type": "string",
                    "x-nullable": true
                },
                "token_id": {
                    "type": "integer"
                },
                "token_info": {
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "volume_24_hours": {
                    "type": "number",
                    "x-nullable": true
                }
            }
        },
        "handlers.TokenMethodStats": {
            "type": "object",
            "properties": {
                "average_consumed_gas": {
                    "type": "integer"
                },
                "call_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.Transfer": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "amount": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "counter": {
                    "type": "integer"
                },
                "from": {
                    "type": "string"
                },
                "from_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "hash": {
                    "type": "string"
                },
                "indexed_time": {
                    "type": "integer"
                },
                "initiator": {
                    "type": "string"
                },
                "initiator_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "level": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer",
                    "x-nullable": true
                },
                "parent": {
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "to_alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "token": {
                    "x-nullable": true,
                    "$ref": "#/definitions/handlers.TokenMetadata"
                },
                "token_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.TransferResponse": {
            "type": "object",
            "properties": {
                "last_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "total": {
                    "type": "integer"
                },
                "transfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Transfer"
                    }
                }
            }
        },
        "handlers.ViewSchema": {
            "type": "object",
            "properties": {
                "default_model": {
                    "type": "object",
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "implementation": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "schema": {
                    "$ref": "#/definitions/ast.JSONSchema"
                },
                "typedef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ast.Typedef"
                    }
                }
            }
        },
        "handlers.executeViewRequest": {
            "type": "object",
            "required": [
                "data",
                "implementation",
                "name"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "gas_limit": {
                    "type": "integer"
                },
                "implementation": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "handlers.getEntrypointDataRequest": {
            "type": "object",
            "required": [
                "data",
                "name"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "format": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.runCodeRequest": {
            "type": "object",
            "required": [
                "data",
                "name"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "gas_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "models.Group": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "top": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Top"
                    }
                }
            }
        },
        "models.Item": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object"
                },
                "group": {
                    "$ref": "#/definitions/models.Group"
                },
                "highlights": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Result": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Item"
                    }
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "models.Top": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                }
            }
        },
        "operation.DAppStats": {
            "type": "object",
            "properties": {
                "txs": {
                    "type": "integer"
                },
                "users": {
                    "type": "integer"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "tezerrors.Error": {
            "type": "object",
            "properties": {
                "descr": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "tezosdomain.ReverseTezosDomain": {
            "type": "object",
            "properties": {
                "expiration": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "tezosdomain.TezosDomain": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "expiration": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "tzip.Event": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "implementations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tzip.EventImplementation"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "tzip.EventImplementation": {
            "type": "object",
            "properties": {
                "michelsonExtendedStorageEvent": {
                    "$ref": "#/definitions/tzip.MichelsonExtendedStorageEvent"
                },
                "michelsonInitialStorageEvent": {
                    "$ref": "#/definitions/tzip.MichelsonInitialStorageEvent"
                },
                "michelsonParameterEvent": {
                    "$ref": "#/definitions/tzip.MichelsonParameterEvent"
                }
            }
        },
        "tzip.License": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "tzip.MichelsonExtendedStorageEvent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "entrypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parameter": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "returnType": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "tzip.MichelsonInitialStorageEvent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "parameter": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "returnType": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "tzip.MichelsonParameterEvent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "entrypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parameter": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "returnType": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "tzip.Sections": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "parameter": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "returnType": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "tzip.View": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "implementations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tzip.ViewImplementation"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "tzip.ViewImplementation": {
            "type": "object",
            "properties": {
                "michelsonStorageView": {
                    "$ref": "#/definitions/tzip.Sections"
                }
            }
        }
    }
}